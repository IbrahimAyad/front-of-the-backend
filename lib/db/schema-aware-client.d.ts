import { PrismaClient } from '@prisma/client';
export interface SchemaConfig {
    shared: string[];
    tenant: string[];
    analytics: string[];
}
export declare const schemaConfig: SchemaConfig;
export declare class SchemaAwareClient {
    private writeClient;
    private readClient;
    private directPool;
    constructor();
    getClient(readonly?: boolean): PrismaClient;
    query<T>(sql: string, params?: any[], schema?: string): Promise<T[]>;
    get products(): {
        findMany: (args?: any) => Promise<{
            id: string;
            name: string;
            description: string | null;
            longDescription: string | null;
            category: string;
            subcategory: string | null;
            price: import("@prisma/client/runtime/library").Decimal;
            compareAtPrice: import("@prisma/client/runtime/library").Decimal | null;
            costPrice: import("@prisma/client/runtime/library").Decimal | null;
            sku: string;
            barcode: string | null;
            slug: string | null;
            brand: string | null;
            fabric: string | null;
            pattern: string | null;
            season: string | null;
            occasions: string[];
            styleAttributes: string[];
            care: string | null;
            smartAttributes: import("@prisma/client/runtime/library").JsonValue | null;
            fabricMarketing: string | null;
            fabricCare: string | null;
            fabricBenefits: string[];
            colorFamily: string | null;
            hexPrimary: string | null;
            hexSecondary: string | null;
            primaryOccasion: string | null;
            occasionTags: string[];
            trendingFor: string[];
            outfitRole: string | null;
            pairsWellWith: string[];
            styleNotes: string | null;
            localKeywords: string[];
            targetLocation: string | null;
            trackStock: boolean;
            totalStock: number;
            availableStock: number;
            reservedStock: number;
            minimumStock: number;
            maximumStock: number | null;
            reorderPoint: number;
            reorderQuantity: number;
            status: string;
            isPublished: boolean;
            isFeatured: boolean;
            isOnSale: boolean;
            metaTitle: string | null;
            metaDescription: string | null;
            tags: string[];
            weight: import("@prisma/client/runtime/library").Decimal | null;
            dimensions: string | null;
            supplierId: string | null;
            supplierSku: string | null;
            leadTime: number | null;
            createdAt: Date;
            updatedAt: Date;
            publishedAt: Date | null;
            discontinuedAt: Date | null;
        }[]>;
        findUnique: (args: any) => Promise<{
            id: string;
            name: string;
            description: string | null;
            longDescription: string | null;
            category: string;
            subcategory: string | null;
            price: import("@prisma/client/runtime/library").Decimal;
            compareAtPrice: import("@prisma/client/runtime/library").Decimal | null;
            costPrice: import("@prisma/client/runtime/library").Decimal | null;
            sku: string;
            barcode: string | null;
            slug: string | null;
            brand: string | null;
            fabric: string | null;
            pattern: string | null;
            season: string | null;
            occasions: string[];
            styleAttributes: string[];
            care: string | null;
            smartAttributes: import("@prisma/client/runtime/library").JsonValue | null;
            fabricMarketing: string | null;
            fabricCare: string | null;
            fabricBenefits: string[];
            colorFamily: string | null;
            hexPrimary: string | null;
            hexSecondary: string | null;
            primaryOccasion: string | null;
            occasionTags: string[];
            trendingFor: string[];
            outfitRole: string | null;
            pairsWellWith: string[];
            styleNotes: string | null;
            localKeywords: string[];
            targetLocation: string | null;
            trackStock: boolean;
            totalStock: number;
            availableStock: number;
            reservedStock: number;
            minimumStock: number;
            maximumStock: number | null;
            reorderPoint: number;
            reorderQuantity: number;
            status: string;
            isPublished: boolean;
            isFeatured: boolean;
            isOnSale: boolean;
            metaTitle: string | null;
            metaDescription: string | null;
            tags: string[];
            weight: import("@prisma/client/runtime/library").Decimal | null;
            dimensions: string | null;
            supplierId: string | null;
            supplierSku: string | null;
            leadTime: number | null;
            createdAt: Date;
            updatedAt: Date;
            publishedAt: Date | null;
            discontinuedAt: Date | null;
        } | null>;
        create: (args: any) => Promise<{
            id: string;
            name: string;
            description: string | null;
            longDescription: string | null;
            category: string;
            subcategory: string | null;
            price: import("@prisma/client/runtime/library").Decimal;
            compareAtPrice: import("@prisma/client/runtime/library").Decimal | null;
            costPrice: import("@prisma/client/runtime/library").Decimal | null;
            sku: string;
            barcode: string | null;
            slug: string | null;
            brand: string | null;
            fabric: string | null;
            pattern: string | null;
            season: string | null;
            occasions: string[];
            styleAttributes: string[];
            care: string | null;
            smartAttributes: import("@prisma/client/runtime/library").JsonValue | null;
            fabricMarketing: string | null;
            fabricCare: string | null;
            fabricBenefits: string[];
            colorFamily: string | null;
            hexPrimary: string | null;
            hexSecondary: string | null;
            primaryOccasion: string | null;
            occasionTags: string[];
            trendingFor: string[];
            outfitRole: string | null;
            pairsWellWith: string[];
            styleNotes: string | null;
            localKeywords: string[];
            targetLocation: string | null;
            trackStock: boolean;
            totalStock: number;
            availableStock: number;
            reservedStock: number;
            minimumStock: number;
            maximumStock: number | null;
            reorderPoint: number;
            reorderQuantity: number;
            status: string;
            isPublished: boolean;
            isFeatured: boolean;
            isOnSale: boolean;
            metaTitle: string | null;
            metaDescription: string | null;
            tags: string[];
            weight: import("@prisma/client/runtime/library").Decimal | null;
            dimensions: string | null;
            supplierId: string | null;
            supplierSku: string | null;
            leadTime: number | null;
            createdAt: Date;
            updatedAt: Date;
            publishedAt: Date | null;
            discontinuedAt: Date | null;
        }>;
        update: (args: any) => Promise<{
            id: string;
            name: string;
            description: string | null;
            longDescription: string | null;
            category: string;
            subcategory: string | null;
            price: import("@prisma/client/runtime/library").Decimal;
            compareAtPrice: import("@prisma/client/runtime/library").Decimal | null;
            costPrice: import("@prisma/client/runtime/library").Decimal | null;
            sku: string;
            barcode: string | null;
            slug: string | null;
            brand: string | null;
            fabric: string | null;
            pattern: string | null;
            season: string | null;
            occasions: string[];
            styleAttributes: string[];
            care: string | null;
            smartAttributes: import("@prisma/client/runtime/library").JsonValue | null;
            fabricMarketing: string | null;
            fabricCare: string | null;
            fabricBenefits: string[];
            colorFamily: string | null;
            hexPrimary: string | null;
            hexSecondary: string | null;
            primaryOccasion: string | null;
            occasionTags: string[];
            trendingFor: string[];
            outfitRole: string | null;
            pairsWellWith: string[];
            styleNotes: string | null;
            localKeywords: string[];
            targetLocation: string | null;
            trackStock: boolean;
            totalStock: number;
            availableStock: number;
            reservedStock: number;
            minimumStock: number;
            maximumStock: number | null;
            reorderPoint: number;
            reorderQuantity: number;
            status: string;
            isPublished: boolean;
            isFeatured: boolean;
            isOnSale: boolean;
            metaTitle: string | null;
            metaDescription: string | null;
            tags: string[];
            weight: import("@prisma/client/runtime/library").Decimal | null;
            dimensions: string | null;
            supplierId: string | null;
            supplierSku: string | null;
            leadTime: number | null;
            createdAt: Date;
            updatedAt: Date;
            publishedAt: Date | null;
            discontinuedAt: Date | null;
        }>;
        delete: (args: any) => Promise<{
            id: string;
            name: string;
            description: string | null;
            longDescription: string | null;
            category: string;
            subcategory: string | null;
            price: import("@prisma/client/runtime/library").Decimal;
            compareAtPrice: import("@prisma/client/runtime/library").Decimal | null;
            costPrice: import("@prisma/client/runtime/library").Decimal | null;
            sku: string;
            barcode: string | null;
            slug: string | null;
            brand: string | null;
            fabric: string | null;
            pattern: string | null;
            season: string | null;
            occasions: string[];
            styleAttributes: string[];
            care: string | null;
            smartAttributes: import("@prisma/client/runtime/library").JsonValue | null;
            fabricMarketing: string | null;
            fabricCare: string | null;
            fabricBenefits: string[];
            colorFamily: string | null;
            hexPrimary: string | null;
            hexSecondary: string | null;
            primaryOccasion: string | null;
            occasionTags: string[];
            trendingFor: string[];
            outfitRole: string | null;
            pairsWellWith: string[];
            styleNotes: string | null;
            localKeywords: string[];
            targetLocation: string | null;
            trackStock: boolean;
            totalStock: number;
            availableStock: number;
            reservedStock: number;
            minimumStock: number;
            maximumStock: number | null;
            reorderPoint: number;
            reorderQuantity: number;
            status: string;
            isPublished: boolean;
            isFeatured: boolean;
            isOnSale: boolean;
            metaTitle: string | null;
            metaDescription: string | null;
            tags: string[];
            weight: import("@prisma/client/runtime/library").Decimal | null;
            dimensions: string | null;
            supplierId: string | null;
            supplierSku: string | null;
            leadTime: number | null;
            createdAt: Date;
            updatedAt: Date;
            publishedAt: Date | null;
            discontinuedAt: Date | null;
        }>;
    };
    get customers(): {
        findMany: (args?: any) => Promise<{
            id: string;
            email: string;
            name: string;
            createdAt: Date;
            updatedAt: Date;
            firstName: string | null;
            lastName: string | null;
            phone: string | null;
            address: string | null;
            city: string | null;
            state: string | null;
            zipCode: string | null;
            country: string | null;
            dateOfBirth: Date | null;
            notes: string | null;
        }[]>;
        findUnique: (args: any) => Promise<{
            id: string;
            email: string;
            name: string;
            createdAt: Date;
            updatedAt: Date;
            firstName: string | null;
            lastName: string | null;
            phone: string | null;
            address: string | null;
            city: string | null;
            state: string | null;
            zipCode: string | null;
            country: string | null;
            dateOfBirth: Date | null;
            notes: string | null;
        } | null>;
        create: (args: any) => Promise<{
            id: string;
            email: string;
            name: string;
            createdAt: Date;
            updatedAt: Date;
            firstName: string | null;
            lastName: string | null;
            phone: string | null;
            address: string | null;
            city: string | null;
            state: string | null;
            zipCode: string | null;
            country: string | null;
            dateOfBirth: Date | null;
            notes: string | null;
        }>;
        update: (args: any) => Promise<{
            id: string;
            email: string;
            name: string;
            createdAt: Date;
            updatedAt: Date;
            firstName: string | null;
            lastName: string | null;
            phone: string | null;
            address: string | null;
            city: string | null;
            state: string | null;
            zipCode: string | null;
            country: string | null;
            dateOfBirth: Date | null;
            notes: string | null;
        }>;
        delete: (args: any) => Promise<{
            id: string;
            email: string;
            name: string;
            createdAt: Date;
            updatedAt: Date;
            firstName: string | null;
            lastName: string | null;
            phone: string | null;
            address: string | null;
            city: string | null;
            state: string | null;
            zipCode: string | null;
            country: string | null;
            dateOfBirth: Date | null;
            notes: string | null;
        }>;
    };
    get orders(): {
        findMany: (args?: any) => Promise<{
            id: string;
            status: import(".prisma/client").$Enums.OrderStatus;
            createdAt: Date;
            updatedAt: Date;
            notes: string | null;
            customerId: string;
            total: import("@prisma/client/runtime/library").Decimal;
            totalAmount: import("@prisma/client/runtime/library").Decimal | null;
            paymentStatus: string | null;
            dueDate: Date | null;
        }[]>;
        findUnique: (args: any) => Promise<{
            id: string;
            status: import(".prisma/client").$Enums.OrderStatus;
            createdAt: Date;
            updatedAt: Date;
            notes: string | null;
            customerId: string;
            total: import("@prisma/client/runtime/library").Decimal;
            totalAmount: import("@prisma/client/runtime/library").Decimal | null;
            paymentStatus: string | null;
            dueDate: Date | null;
        } | null>;
        create: (args: any) => Promise<{
            id: string;
            status: import(".prisma/client").$Enums.OrderStatus;
            createdAt: Date;
            updatedAt: Date;
            notes: string | null;
            customerId: string;
            total: import("@prisma/client/runtime/library").Decimal;
            totalAmount: import("@prisma/client/runtime/library").Decimal | null;
            paymentStatus: string | null;
            dueDate: Date | null;
        }>;
        update: (args: any) => Promise<{
            id: string;
            status: import(".prisma/client").$Enums.OrderStatus;
            createdAt: Date;
            updatedAt: Date;
            notes: string | null;
            customerId: string;
            total: import("@prisma/client/runtime/library").Decimal;
            totalAmount: import("@prisma/client/runtime/library").Decimal | null;
            paymentStatus: string | null;
            dueDate: Date | null;
        }>;
        delete: (args: any) => Promise<{
            id: string;
            status: import(".prisma/client").$Enums.OrderStatus;
            createdAt: Date;
            updatedAt: Date;
            notes: string | null;
            customerId: string;
            total: import("@prisma/client/runtime/library").Decimal;
            totalAmount: import("@prisma/client/runtime/library").Decimal | null;
            paymentStatus: string | null;
            dueDate: Date | null;
        }>;
    };
    getCustomerInsights(customerId: string): Promise<unknown[]>;
    getProductRecommendations(customerId: string): Promise<unknown[]>;
    healthCheck(): Promise<Record<string, boolean>>;
    disconnect(): Promise<void>;
}
export declare function getSchemaAwareClient(): SchemaAwareClient;
//# sourceMappingURL=schema-aware-client.d.ts.map
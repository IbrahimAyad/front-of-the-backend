generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model audit_logs {
  id        String   @id
  userId    String?
  action    String
  entity    String
  entityId  String?
  changes   Json?
  ipAddress String?
  userAgent String?
  createdAt DateTime @default(now())
}

model bulk_pricing {
  id              String   @id
  productId       String
  minQuantity     Int
  pricePerUnit    Decimal  @db.Decimal(10, 2)
  discountPercent Decimal  @db.Decimal(5, 2)
  products        products @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model bundle_options {
  id              String   @id
  productId       String
  name            String
  description     String
  productIds      String[] @default([])
  discountPercent Decimal  @db.Decimal(5, 2)
  products        products @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model customers {
  id                     String    @id
  email                  String    @unique
  password               String?
  firstName              String?
  lastName               String?
  phone                  String?
  dateOfBirth            DateTime?
  isEmailVerified        Boolean   @default(false)
  emailVerificationToken String?
  passwordResetToken     String?
  passwordResetExpires   DateTime?
  lastLogin              DateTime?
  isActive               Boolean   @default(true)
  address                Json?
  preferences            Json?
  totalOrders            Int       @default(0)
  totalSpent             Decimal   @default(0) @db.Decimal(12, 2)
  lastOrderAt            DateTime?
  createdAt              DateTime  @default(now())
  updatedAt              DateTime
  orders                 orders[]
}

model order_items {
  id              String   @id
  orderId         String
  productId       String
  variantId       String?
  quantity        Int
  unitPrice       Decimal  @db.Decimal(10, 2)
  totalPrice      Decimal  @db.Decimal(10, 2)
  productSnapshot Json
  orders          orders   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  products        products @relation(fields: [productId], references: [id])
}

model orders {
  id                String        @id
  orderNumber       String        @unique
  customerId        String
  status            OrderStatus   @default(PENDING)
  type              OrderType     @default(PURCHASE)
  subtotal          Decimal       @db.Decimal(12, 2)
  taxAmount         Decimal       @default(0) @db.Decimal(12, 2)
  shippingAmount    Decimal       @default(0) @db.Decimal(12, 2)
  discountAmount    Decimal       @default(0) @db.Decimal(12, 2)
  total             Decimal       @db.Decimal(12, 2)
  billingAddress    Json
  shippingAddress   Json?
  paymentStatus     PaymentStatus @default(PENDING)
  paymentMethod     String?
  paymentId         String?
  shippingMethod    String?
  trackingNumber    String?
  estimatedDelivery DateTime?
  deliveredAt       DateTime?
  rentalStartDate   DateTime?
  rentalEndDate     DateTime?
  returnDate        DateTime?
  notes             String?
  internalNotes     String?
  createdAt         DateTime      @default(now())
  updatedAt         DateTime
  createdBy         String?
  order_items       order_items[]
  users             users?        @relation(fields: [createdBy], references: [id])
  customers         customers     @relation(fields: [customerId], references: [id])
}

model pre_checkout_configs {
  id                String   @id
  productId         String   @unique
  suggestWhen       String[] @default([])
  suggestMessage    String
  discountForBundle Decimal  @db.Decimal(5, 2)
  priority          Int      @default(5)
  products          products @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model product_analytics {
  id          String   @id
  productId   String
  date        DateTime @default(now()) @db.Date
  views       Int      @default(0)
  addedToCart Int      @default(0)
  purchased   Int      @default(0)
  revenue     Decimal  @default(0) @db.Decimal(12, 2)

  @@unique([productId, date])
}

model product_variants {
  id         String   @id
  productId  String
  sku        String   @unique
  attributes Json
  stock      Int      @default(0)
  price      Decimal? @db.Decimal(10, 2)
  isActive   Boolean  @default(true)
  products   products @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model products {
  id                              String                @id
  sku                             String                @unique
  slug                            String                @unique
  productType                     ProductType
  name                            String
  description                     String
  shortDescription                String?
  status                          ProductStatus         @default(DRAFT)
  isActive                        Boolean               @default(true)
  publishedAt                     DateTime?
  currency                        String                @default("USD")
  basePrice                       Decimal               @db.Decimal(10, 2)
  salePrice                       Decimal?              @db.Decimal(10, 2)
  rentalAvailable                 Boolean               @default(false)
  rentalDailyPrice                Decimal?              @db.Decimal(10, 2)
  rentalWeeklyPrice               Decimal?              @db.Decimal(10, 2)
  rentalEventPrice                Decimal?              @db.Decimal(10, 2)
  trackInventory                  Boolean               @default(true)
  inventoryType                   InventoryType         @default(SIMPLE)
  stockCount                      Int?                  @default(0)
  lowStockThreshold               Int?                  @default(5)
  primaryImage                    String?
  hoverImage                      String?
  gallery                         String[]              @default([])
  sizeChart                       String?
  displayOrder                    Int                   @default(0)
  featuredInCategory              Boolean               @default(false)
  showOnHomepage                  Boolean               @default(false)
  isPreCheckoutSuggestion         Boolean               @default(false)
  color                           String
  colorFamily                     String
  material                        String
  materialComposition             String?
  fit                             String?
  style                           String?
  careInstructions                String[]              @default([])
  features                        String[]              @default([])
  productAttributes               Json?
  metaTitle                       String?
  metaDescription                 String?
  keywords                        String[]              @default([])
  canonicalUrl                    String?
  categories                      String[]              @default([])
  tags                            String[]              @default([])
  createdAt                       DateTime              @default(now())
  updatedAt                       DateTime
  createdBy                       String?
  updatedBy                       String?
  version                         Int                   @default(1)
  bulk_pricing                    bulk_pricing[]
  bundle_options                  bundle_options[]
  order_items                     order_items[]
  pre_checkout_configs            pre_checkout_configs?
  product_variants                product_variants[]
  users_products_createdByTousers users?                @relation("products_createdByTousers", fields: [createdBy], references: [id])
  users_products_updatedByTousers users?                @relation("products_updatedByTousers", fields: [updatedBy], references: [id])
}

model search_logs {
  id        String   @id
  query     String
  results   Int      @default(0)
  userId    String?
  ipAddress String?
  userAgent String?
  createdAt DateTime @default(now())
}

model settings {
  id        String   @id
  key       String   @unique
  value     Json
  category  String?
  createdAt DateTime @default(now())
  updatedAt DateTime
}

model users {
  id                                 String     @id
  email                              String     @unique
  password                           String
  firstName                          String?
  lastName                           String?
  role                               UserRole   @default(STAFF)
  isActive                           Boolean    @default(true)
  lastLogin                          DateTime?
  createdAt                          DateTime   @default(now())
  updatedAt                          DateTime
  orders                             orders[]
  products_products_createdByTousers products[] @relation("products_createdByTousers")
  products_products_updatedByTousers products[] @relation("products_updatedByTousers")
}

enum InventoryType {
  SIMPLE
  VARIANT
}

enum OrderStatus {
  PENDING
  CONFIRMED
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
  REFUNDED
  RETURNED
}

enum OrderType {
  PURCHASE
  RENTAL
}

enum PaymentStatus {
  PENDING
  PAID
  FAILED
  REFUNDED
  PARTIAL_REFUND
}

enum ProductStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}

enum ProductType {
  SUIT
  SHIRT
  TIE
  ACCESSORY
  SHOE
  BELT
}

enum UserRole {
  SUPER_ADMIN
  ADMIN
  MANAGER
  STAFF
}
